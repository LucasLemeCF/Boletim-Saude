name: boletim-saude

services:
  backend:
    container_name: boletim-saude-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_URL=${POSTGRES_URL}
      - API_TOKEN_SECRET=${API_TOKEN_SECRET}
      - USUARIO_LOGIN=${USUARIO_LOGIN}
      - SENHA_LOGIN=${SENHA_LOGIN}
    ports:
      - "8080:8080"
    networks:
      - boletim-saude-network
    depends_on:
      - database

  database:
    container_name: postgres
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ../docker/data/postgresql:/var/lib/postgresql/data
    networks:
      - boletim-saude-network

  frontend:
    container_name: boletim-saude-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    environment:
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXT_PUBLIC_API=${NEXT_PUBLIC_API}
      - NEXT_PUBLIC_API_INTERNAL=${NEXT_PUBLIC_API_INTERNAL}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - boletim-saude-network

  nginx:
    container_name: nginx-gateway
    image: nginx:latest
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
    networks:
      - boletim-saude-network

networks:
  boletim-saude-network:
    driver: bridge
